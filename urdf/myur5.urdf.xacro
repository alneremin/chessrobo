<?xml version="1.0"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro" name="$UR5e_robot">
 
    <xacro:include filename="$(find ur_gazebo)/urdf/ur_macro.xacro"/>
    <xacro:include filename="$(find robotiq_description)/urdf/robotiq_85_gripper.urdf.xacro" />

  <!--Declare arguments -->
    <xacro:arg name="joint_limit_params" default="$(find ur_description)/config/ur5e/joint_limits.yaml"/>
    <xacro:arg name="physical_params" default="$(find ur_description)/config/ur5e/physical_parameters.yaml"/>
    <xacro:arg name="kinematics_params" default="$(find ur_description)/config/ur5e/default_kinematics.yaml"/>
    <xacro:arg name="visual_params" default="$(find ur_description)/config/ur5e/visual_parameters.yaml"/>

  <!--
    legal values:
      - hardware_interface/PositionJointInterface
      - hardware_interface/VelocityJointInterface
      - hardware_interface/EffortJointInterface

    NOTE: this value must correspond to the controller configured in the
          controller .yaml files in the 'config' directory.
  -->
    <xacro:arg name="transmission_hw_interface" default="hardware_interface/EffortJointInterface"/>
    <xacro:arg name="safety_limits" default="false"/>
    <xacro:arg name="safety_pos_margin" default="0.15"/>
    <xacro:arg name="safety_k_position" default="20"/>
    <xacro:arg name="robot_model" default="ur5e"/>

  <!-- Instantiate the Gazebo robot and pass it all the required arguments. -->
    <xacro:ur_robot_gazebo
        prefix=""
        joint_limits_parameters_file="$(arg joint_limit_params)"
        kinematics_parameters_file="$(arg kinematics_params)"
        physical_parameters_file="$(arg physical_params)"
        visual_parameters_file="$(arg visual_params)"
        transmission_hw_interface="$(arg transmission_hw_interface)"
        safety_limits="$(arg safety_limits)"
        safety_pos_margin="$(arg safety_pos_margin)"
        safety_k_position="$(arg safety_k_position)"
    />

  <!--
    Attach the Gazebo model to Gazebo's world frame.

    Note: if you're looking to integrate a UR into a larger scene and need
    to add EEFs or other parts, DO NOT change this file or the 'world' link
    here. Create a NEW xacro instead and decide whether you need to add
    a 'world' link there.
  -->

    <link name="world"/>
  <!-- Define UR robot integration -->
    <link name="pedestal">
        <inertial>
            <origin xyz="0 0 0.025" rpy="0 0 0"/>
            <mass value="20"/>
            <inertia ixx="200" ixy="200" ixz="200" iyy="200" iyz="200" izz="200"/>
        </inertial>
        <visual>
            <origin xyz="0 0 0.025" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="0.1" length="0.05"/>
            </geometry>
            <material name="gray">
                <color rgba="0.5 0.5 0.5 0"/>
            </material>
        </visual>
        <collision>
            <origin xyz="0 0 0.025" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="0.1" length="0.05"/>
            </geometry>
        </collision>
    </link>
    <Gazebo reference="pedestal">
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
        <material>Gazebo/Orange</material>
    </Gazebo>
    <joint name="pedestal_to_world" type="fixed">
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <parent link="world"/>
        <child link="pedestal"/>
    </joint>
    <joint name="pedastal_joint" type="fixed">
        <origin xyz="0 0 0.05" rpy="0 0 0"/>
        <parent link="pedestal"/>
        <child link="base_link"/>
    </joint>
  <link name="tool0_controller"/>
  <joint name="tool_controller_fake_joint" type="fixed">
    <parent link="tool0"/>
    <child link="tool0_controller"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>
</robot>